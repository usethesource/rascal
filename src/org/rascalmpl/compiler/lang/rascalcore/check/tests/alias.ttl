test OkAlias1 [[ 
           module A 
           alias INT = int; 
           INT z = 13; 
 ]]

test UnknownAlias [[ 
           module A 
           INT z = 13; 
]] expect { "Invalid variable initialization;" }

test IllegalParameter [[ module A 
           alias INT = int; 
           INT[str] z = 13; 
 ]]  expect { "Type `int` cannot be parameterized, found 1 parameter(s)" }

test OkParameter [[ module A 
           alias LIST[&T] = list[&T]; 
           LIST[int] z = [1,2];
]] 

test WrongTypeParameter [[ module A 
           alias LIST[&T] = list[&T]; 
           LIST[str] z = [1,2]; 
]] expect { "Type of initialization should be subtype of `list[str]`, found `list[int]`" }

test OkIndirectAlias1 [[ 
           module A
           alias LIST[&T] = LIST1[&T];
           alias LIST1[&T] = list[&T]; 
           LIST[int] z = [1,2]; 
]] 

test OkIndirectAlias2 [[
           module A 
           alias LIST1[&T] = list[&T]; 
           alias LIST[&T] = LIST1[&T];  
           LIST[int] z = [1,2]; 
]]

test CircularAlias [[
           module A
           alias X = Y;
           alias Y = X;
]] expect { "Unresolved type" }