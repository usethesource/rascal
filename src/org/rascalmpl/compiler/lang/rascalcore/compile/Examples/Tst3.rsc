module lang::rascalcore::compile::Examples::Tst3

import lang::rascalcore::check::ATypeBase;
import Set;
import IO;

set[AType] D =
{
    afunc(abool(), [anode([]), anode([])], []),
  aint(),
  abool(),
  aadt(
    "LocationType",
    [],
    dataSyntax()),
  aloc(alabel="physical"),
  anum(),
  alist(aloc()),
  acons(
    aadt(
      "LocationChangeEvent",
      [],
      dataSyntax()),
    [
      aloc(alabel="src"),
      aadt(
        "LocationChangeType",
        [],
        dataSyntax(),
        alabel="changeType"),
      aadt(
        "LocationType",
        [],
        dataSyntax(),
        alabel="type")
    ],
    [],
    alabel="changeEvent"),
  adatetime(),
  acons(
    aadt(
      "LocationChangeType",
      [],
      dataSyntax()),
    [],
    [],
    alabel="created"),
  astr(),
  avalue(),
  acons(
    aadt(
      "LocationChangeType",
      [],
      dataSyntax()),
    [],
    [],
    alabel="deleted"),
  aloc(alabel="src"),
  aadt(
    "RuntimeException",
    [],
    dataSyntax()),
  afunc(
    avoid(),
    [aadt(
        "LocationChangeEvent",
        [],
        dataSyntax())],
    []),
  aloc(),
  anode([]),
  acons(
    aadt(
      "LocationType",
      [],
      dataSyntax()),
    [],
    [],
    alabel="file"),
  aadt(
    "LocationChangeEvent",
    [],
    dataSyntax()),
  aloc(alabel="logical"),
  aadt(
    "LocationChangeType",
    [],
    dataSyntax()),
  aadt(
    "Tree",
    [],
    dataSyntax()),
  acons(
    aadt(
      "LocationChangeType",
      [],
      dataSyntax()),
    [],
    [],
    alabel="modified"),
  amap(
    aloc(alabel="logical"),
    aloc(alabel="physical")),
  avoid(),
  alist(astr()),
  acons(
    aadt(
      "LocationType",
      [],
      dataSyntax()),
    [],
    [],
    alabel="directory"),
  alist(avalue()),
  afunc(
    avoid(),
    [aadt(
        "LocationChangeEvent",
        [],
        dataSyntax(),
        alabel="event")],
    []),
  aparameter(
    "T",
    avalue()),
  alist(aint())
};

value main() = sort(D, bool(AType a, AType b){ return /a := b && a !:= b;;});