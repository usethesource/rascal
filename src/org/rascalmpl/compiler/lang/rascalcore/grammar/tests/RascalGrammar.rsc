module  lang::rascal::grammar::tests::RascalGrammar

import Grammar;
import ParseTree;
import IO;
import String;
import List;
import lang::rascal::grammar::ParserGenerator;
import lang::rascal::grammar::Lookahead;
import util::Benchmark;
import util::Reflective;

public Grammar Rascal = grammar({sort("Module")},
(
lex("RealLiteral"): choice(lex("RealLiteral"),{prod(lex("RealLiteral"),[conditional(lit("."),{\not-precede(\char-class([range(46,46)]))}),iter(\char-class([range(48,57)])),\char-class([range(69,69),range(101,101)]),opt(\char-class([range(43,43),range(45,45)])),iter(\char-class([range(48,57)])),opt(\char-class([range(68,68),range(70,70),range(100,100),range(102,102)]))],{}),prod(lex("RealLiteral"),[iter(\char-class([range(48,57)])),conditional(lit("."),{\not-follow(lit("."))}),\iter-star(\char-class([range(48,57)])),opt(\char-class([range(68,68),range(70,70),range(100,100),range(102,102)]))],{}),prod(lex("RealLiteral"),[conditional(lit("."),{\not-precede(\char-class([range(46,46)]))}),iter(\char-class([range(48,57)])),opt(\char-class([range(68,68),range(70,70),range(100,100),range(102,102)]))],{}),prod(lex("RealLiteral"),[iter(\char-class([range(48,57)])),\char-class([range(69,69),range(101,101)]),opt(\char-class([range(43,43),range(45,45)])),iter(\char-class([range(48,57)])),opt(\char-class([range(68,68),range(70,70),range(100,100),range(102,102)]))],{}),prod(lex("RealLiteral"),[iter(\char-class([range(48,57)])),\char-class([range(68,68),range(70,70),range(100,100),range(102,102)])],{}),prod(lex("RealLiteral"),[iter(\char-class([range(48,57)])),lit("."),\iter-star(\char-class([range(48,57)])),\char-class([range(69,69),range(101,101)]),opt(\char-class([range(43,43),range(45,45)])),iter(\char-class([range(48,57)])),opt(\char-class([range(68,68),range(70,70),range(100,100),range(102,102)]))],{})}),
sort("Tags"): choice(sort("Tags"),{prod(label("default",sort("Tags")),[label("tags",\iter-star-seps(sort("Tag"),[layouts("LAYOUTLIST")]))],{})}),
\start(sort("EvalCommand")): choice(\start(sort("EvalCommand")),{prod(\start(sort("EvalCommand")),[layouts("LAYOUTLIST"),label("top",sort("EvalCommand")),layouts("LAYOUTLIST")],{})}),
sort("ModuleActuals"): choice(sort("ModuleActuals"),{prod(label("default",sort("ModuleActuals")),[lit("["),layouts("LAYOUTLIST"),label("types",\iter-seps(sort("Type"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{})}),
sort("Renamings"): choice(sort("Renamings"),{prod(label("default",sort("Renamings")),[lit("renaming"),layouts("LAYOUTLIST"),label("renamings",\iter-seps(sort("Renaming"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")]))],{})}),
sort("KeywordFormal"): choice(sort("KeywordFormal"),{prod(label("default",sort("KeywordFormal")),[label("type",sort("Type")),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{})}),
lex("MidPathChars"): choice(lex("MidPathChars"),{prod(lex("MidPathChars"),[lit("\>"),lex("URLChars"),lit("\<")],{})}),
sort("OptionalExpression"): choice(sort("OptionalExpression"),{prod(label("noExpression",sort("OptionalExpression")),[],{}),prod(label("expression",sort("OptionalExpression")),[label("expression",sort("Expression"))],{})}),
sort("Expression"): choice(sort("Expression"),{priority(sort("Expression"),[choice(sort("Expression"),{prod(label("it",sort("Expression")),[conditional(lit("it"),{\not-precede(\char-class([range(65,90),range(95,95),range(97,122)])),\not-follow(\char-class([range(65,90),range(95,95),range(97,122)]))})],{}),prod(label("tuple",sort("Expression")),[lit("\<"),layouts("LAYOUTLIST"),label("elements",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("\>")],{}),prod(label("literal",sort("Expression")),[label("literal",sort("Literal"))],{}),prod(label("visit",sort("Expression")),[label("label",sort("Label")),layouts("LAYOUTLIST"),label("visit",sort("Visit"))],{}),prod(label("closure",sort("Expression")),[label("type",sort("Type")),layouts("LAYOUTLIST"),label("parameters",sort("Parameters")),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("statements",\iter-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("reducer",sort("Expression")),[lit("("),layouts("LAYOUTLIST"),label("init",sort("Expression")),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("result",sort("Expression")),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("callOrTree",sort("Expression")),[label("expression",conditional(sort("Expression"),{except("isDefined"),except("transitiveClosure"),except("transitiveReflexiveClosure")})),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("arguments",\iter-star-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("keywordArguments",\parameterized-sort("KeywordArguments",[sort("Expression")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("nonEmptyBlock",sort("Expression")),[lit("{"),layouts("LAYOUTLIST"),label("statements",\iter-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("set",sort("Expression")),[lit("{"),layouts("LAYOUTLIST"),label("elements0",\iter-star-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("reifiedType",sort("Expression")),[lit("type"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("symbol",sort("Expression")),layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST"),label("definitions",sort("Expression")),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("all",sort("Expression")),[lit("all"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("has",sort("Expression")),[label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("has"),layouts("LAYOUTLIST"),label("name",lex("Name"))],{}),prod(label("sliceStep",sort("Expression")),[conditional(label("expression",sort("Expression")),{except("isDefined"),except("transitiveClosure"),except("transitiveReflexiveClosure")}),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("optFirst",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST"),label("second",sort("Expression")),layouts("LAYOUTLIST"),lit(".."),layouts("LAYOUTLIST"),label("optLast",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("getAnnotation",sort("Expression")),[label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("@"),layouts("LAYOUTLIST"),label("name",lex("Name"))],{}),prod(label("is",sort("Expression")),[label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("is"),layouts("LAYOUTLIST"),label("name",lex("Name"))],{}),prod(label("voidClosure",sort("Expression")),[label("parameters",sort("Parameters")),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("statements0",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("slice",sort("Expression")),[conditional(label("expression",sort("Expression")),{except("isDefined"),except("transitiveClosure"),except("transitiveReflexiveClosure")}),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("optFirst",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit(".."),layouts("LAYOUTLIST"),label("optLast",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("list",sort("Expression")),[lit("["),layouts("LAYOUTLIST"),label("elements0",\iter-star-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("comprehension",sort("Expression")),[label("comprehension",sort("Comprehension"))],{}),prod(label("stepRange",sort("Expression")),[lit("["),layouts("LAYOUTLIST"),label("first",sort("Expression")),layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST"),label("second",sort("Expression")),layouts("LAYOUTLIST"),lit(".."),layouts("LAYOUTLIST"),label("last",sort("Expression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("fieldProject",sort("Expression")),[conditional(label("expression",sort("Expression")),{except("isDefined"),except("transitiveClosure"),except("transitiveReflexiveClosure")}),layouts("LAYOUTLIST"),lit("\<"),layouts("LAYOUTLIST"),label("fields",\iter-seps(sort("Field"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("\>")],{}),prod(label("fieldAccess",sort("Expression")),[label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("."),layouts("LAYOUTLIST"),label("field",lex("Name"))],{}),prod(label("setAnnotation",sort("Expression")),[label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),lit("@"),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("value",sort("Expression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("transitiveReflexiveClosure",sort("Expression")),[label("argument",sort("Expression")),layouts("LAYOUTLIST"),conditional(lit("*"),{\not-follow(lit("="))})],{}),prod(label("qualifiedName",sort("Expression")),[label("qualifiedName",sort("QualifiedName"))],{}),prod(label("map",sort("Expression")),[lit("("),layouts("LAYOUTLIST"),label("mappings",\iter-star-seps(\parameterized-sort("Mapping",[sort("Expression")]),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("transitiveClosure",sort("Expression")),[label("argument",sort("Expression")),layouts("LAYOUTLIST"),conditional(lit("+"),{\not-follow(lit("="))})],{}),prod(label("subscript",sort("Expression")),[conditional(label("expression",sort("Expression")),{except("isDefined"),except("transitiveClosure"),except("transitiveReflexiveClosure")}),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("subscripts",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("any",sort("Expression")),[lit("any"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("bracket",sort("Expression")),[lit("("),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit(")")],{\bracket()}),prod(label("fieldUpdate",sort("Expression")),[label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("key",lex("Name")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("replacement",sort("Expression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("reifyType",sort("Expression")),[lit("#"),layouts("LAYOUTLIST"),conditional(label("type",sort("Type")),{except("selector"),\not-follow(lit("["))})],{}),prod(label("range",sort("Expression")),[lit("["),layouts("LAYOUTLIST"),label("first",sort("Expression")),layouts("LAYOUTLIST"),lit(".."),layouts("LAYOUTLIST"),label("last",sort("Expression")),layouts("LAYOUTLIST"),lit("]")],{})}),prod(label("isDefined",sort("Expression")),[label("argument",sort("Expression")),layouts("LAYOUTLIST"),lit("?")],{}),choice(sort("Expression"),{prod(label("asType",sort("Expression")),[lit("["),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),lit("]"),layouts("LAYOUTLIST"),label("argument",conditional(sort("Expression"),{except("match"),except("noMatch")}))],{}),prod(label("splice",sort("Expression")),[lit("*"),layouts("LAYOUTLIST"),label("argument",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("negative",sort("Expression")),[lit("-"),layouts("LAYOUTLIST"),label("argument",sort("Expression"))],{}),prod(label("negation",sort("Expression")),[lit("!"),layouts("LAYOUTLIST"),label("argument",conditional(sort("Expression"),{except("match"),except("noMatch")}))],{})}),prod(label("composition",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("o"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),associativity(sort("Expression"),\left(),{prod(label("division",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("/"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),prod(label("join",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("join"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),prod(label("product",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("*"),layouts("LAYOUTLIST"),conditional(empty(),{\not-follow(lit("*"))}),layouts("LAYOUTLIST"),label("rhs",conditional(sort("Expression"),{except("match"),except("noMatch")}))],{}),prod(label("remainder",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("%"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{})}),prod(label("intersection",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),conditional(lit("&"),{\not-follow(lit("&"))}),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),associativity(sort("Expression"),\left(),{prod(label("insertBefore",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("\>\>"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),prod(label("addition",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("+"),layouts("LAYOUTLIST"),label("rhs",conditional(sort("Expression"),{except("match"),except("noMatch")}))],{}),prod(label("subtraction",sort("Expression")),[label("lhs",conditional(sort("Expression"),{except("transitiveClosure"),except("transitiveReflexiveClosure")})),layouts("LAYOUTLIST"),lit("-"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),prod(label("appendAfter",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),conditional(lit("\<\<"),{\not-follow(lit("="))}),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{})}),prod(label("modulo",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("mod"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),associativity(sort("Expression"),\non-assoc(),{prod(label("in",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("in"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("notIn",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("notin"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())})}),associativity(sort("Expression"),\non-assoc(),{prod(label("lessThan",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),conditional(lit("\<"),{\not-follow(lit("-"))}),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("greaterThanOrEq",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("\>="),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("greaterThan",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("\>"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("lessThanOrEq",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("\<="),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())})}),associativity(sort("Expression"),\non-assoc(),{prod(label("nonEquals",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("!="),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("equals",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("=="),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())})}),prod(label("ifDefinedOtherwise",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("?"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),associativity(sort("Expression"),\non-assoc(),{prod(label("noMatch",sort("Expression")),[label("pattern",sort("Pattern")),layouts("LAYOUTLIST"),lit("!:="),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("enumerator",sort("Expression")),[label("pattern",sort("Pattern")),layouts("LAYOUTLIST"),lit("\<-"),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("match",sort("Expression")),[label("pattern",sort("Pattern")),layouts("LAYOUTLIST"),lit(":="),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{\assoc(\non-assoc())})}),associativity(sort("Expression"),\non-assoc(),{prod(label("implication",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("==\>"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())}),prod(label("equivalence",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("\<==\>"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{\assoc(\non-assoc())})}),prod(label("and",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("&&"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),prod(label("or",sort("Expression")),[label("lhs",sort("Expression")),layouts("LAYOUTLIST"),lit("||"),layouts("LAYOUTLIST"),label("rhs",sort("Expression"))],{}),prod(label("ifThenElse",sort("Expression")),[label("condition",sort("Expression")),layouts("LAYOUTLIST"),lit("?"),layouts("LAYOUTLIST"),label("thenExp",sort("Expression")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("elseExp",sort("Expression"))],{})]),prod(label("concrete",sort("Expression")),[label("concrete",lex("Concrete"))],{})}),
sort("Class"): choice(sort("Class"),{priority(sort("Class"),[choice(sort("Class"),{prod(label("simpleCharclass",sort("Class")),[lit("["),layouts("LAYOUTLIST"),label("ranges",\iter-star-seps(sort("Range"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("complement",sort("Class")),[lit("!"),layouts("LAYOUTLIST"),label("charClass",sort("Class"))],{})}),prod(label("difference",sort("Class")),[label("lhs",sort("Class")),layouts("LAYOUTLIST"),lit("-"),layouts("LAYOUTLIST"),label("rhs",sort("Class"))],{}),prod(label("intersection",sort("Class")),[label("lhs",sort("Class")),layouts("LAYOUTLIST"),lit("&&"),layouts("LAYOUTLIST"),label("rhs",sort("Class"))],{}),choice(sort("Class"),{prod(label("union",sort("Class")),[label("lhs",sort("Class")),layouts("LAYOUTLIST"),lit("||"),layouts("LAYOUTLIST"),label("rhs",sort("Class"))],{}),prod(label("bracket",sort("Class")),[lit("("),layouts("LAYOUTLIST"),label("charclass",sort("Class")),layouts("LAYOUTLIST"),lit(")")],{\bracket()})})])}),
layouts("$default$"): choice(layouts("$default$"),{prod(layouts("$default$"),[],{})}),
sort("PathPart"): choice(sort("PathPart"),{prod(label("interpolated",sort("PathPart")),[label("pre",lex("PrePathChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("PathTail"))],{}),prod(label("nonInterpolated",sort("PathPart")),[label("pathChars",lex("PathChars"))],{})}),
sort("Signature"): choice(sort("Signature"),{prod(label("withThrows",sort("Signature")),[label("modifiers",sort("FunctionModifiers")),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),label("parameters",sort("Parameters")),layouts("LAYOUTLIST"),lit("throws"),layouts("LAYOUTLIST"),label("exceptions",\iter-seps(sort("Type"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")]))],{}),prod(label("noThrows",sort("Signature")),[label("modifiers",sort("FunctionModifiers")),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),label("parameters",sort("Parameters"))],{})}),
sort("ShellCommand"): choice(sort("ShellCommand"),{prod(label("unimport",sort("ShellCommand")),[lit("unimport"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName"))],{}),prod(label("listDeclarations",sort("ShellCommand")),[lit("declarations")],{}),prod(label("help",sort("ShellCommand")),[lit("help")],{}),prod(label("undeclare",sort("ShellCommand")),[lit("undeclare"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName"))],{}),prod(label("quit",sort("ShellCommand")),[lit("quit")],{}),prod(label("clear",sort("ShellCommand")),[lit("clear")],{}),prod(label("setOption",sort("ShellCommand")),[lit("set"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{}),prod(label("listModules",sort("ShellCommand")),[lit("modules")],{}),prod(label("test",sort("ShellCommand")),[lit("test")],{}),prod(label("history",sort("ShellCommand")),[lit("history")],{}),prod(label("edit",sort("ShellCommand")),[lit("edit"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName"))],{})}),
sort("Catch"): choice(sort("Catch"),{prod(label("binding",sort("Catch")),[lit("catch"),layouts("LAYOUTLIST"),label("pattern",sort("Pattern")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("body",sort("Statement"))],{}),prod(label("default",sort("Catch")),[lit("catch"),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("body",sort("Statement"))],{})}),
sort("DataTarget"): choice(sort("DataTarget"),{prod(label("labeled",sort("DataTarget")),[label("label",lex("Name")),layouts("LAYOUTLIST"),lit(":")],{}),prod(label("empty",sort("DataTarget")),[],{})}),
empty(): choice(empty(),{prod(empty(),[],{})}),
sort("KeywordFormals"): choice(sort("KeywordFormals"),{prod(label("default",sort("KeywordFormals")),[label("optionalComma",lex("OptionalComma")),layouts("LAYOUTLIST"),conditional(label("keywordFormalList",\iter-seps(sort("KeywordFormal"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),{precede(\char-class([range(9,10),range(32,32),range(40,40),range(44,44)]))})],{}),prod(label("none",sort("KeywordFormals")),[],{})}),
sort("Renaming"): choice(sort("Renaming"),{prod(label("default",sort("Renaming")),[label("from",lex("Name")),layouts("LAYOUTLIST"),lit("=\>"),layouts("LAYOUTLIST"),label("to",lex("Name"))],{})}),
sort("Tag"): choice(sort("Tag"),{prod(label("empty",sort("Tag")),[lit("@"),layouts("LAYOUTLIST"),label("name",lex("Name"))],{\tag("Folded"()),\tag("category"("Comment"))}),prod(label("default",sort("Tag")),[lit("@"),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),label("contents",lex("TagString"))],{\tag("Folded"()),\tag("category"("Comment"))}),prod(label("expression",sort("Tag")),[lit("@"),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{\tag("Folded"()),\tag("category"("Comment"))})}),
sort("Type"): choice(sort("Type"),{prod(label("structured",sort("Type")),[label("structured",sort("StructuredType"))],{}),prod(label("user",sort("Type")),[label("user",sort("UserType"))],{}),prod(label("variable",sort("Type")),[label("typeVar",sort("TypeVar"))],{}),prod(label("basic",sort("Type")),[label("basic",sort("BasicType"))],{}),prod(label("bracket",sort("Type")),[lit("("),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),lit(")")],{\bracket()}),prod(label("function",sort("Type")),[label("function",sort("FunctionType"))],{}),prod(label("symbol",sort("Type")),[label("symbol",conditional(sort("Sym"),{except("labeled"),except("parametrized"),except("nonterminal"),except("parameter")}))],{}),prod(label("selector",sort("Type")),[label("selector",sort("DataTypeSelector"))],{})}),
sort("LocationLiteral"): choice(sort("LocationLiteral"),{prod(label("default",sort("LocationLiteral")),[label("protocolPart",sort("ProtocolPart")),layouts("LAYOUTLIST"),label("pathPart",sort("PathPart"))],{})}),
sort("Declaration"): choice(sort("Declaration"),{prod(label("data",sort("Declaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),lit("data"),layouts("LAYOUTLIST"),label("user",sort("UserType")),layouts("LAYOUTLIST"),label("commonKeywordParameters",sort("CommonKeywordParameters")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("variants",\iter-seps(sort("Variant"),[layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(";")],{\tag("Foldable"())}),prod(label("annotation",sort("Declaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),lit("anno"),layouts("LAYOUTLIST"),label("annoType",sort("Type")),layouts("LAYOUTLIST"),label("onType",sort("Type")),layouts("LAYOUTLIST"),lit("@"),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("alias",sort("Declaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),lit("alias"),layouts("LAYOUTLIST"),label("user",sort("UserType")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("base",sort("Type")),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("tag",sort("Declaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),lit("tag"),layouts("LAYOUTLIST"),label("kind",sort("Kind")),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit("on"),layouts("LAYOUTLIST"),label("types",\iter-seps(sort("Type"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("function",sort("Declaration")),[label("functionDeclaration",sort("FunctionDeclaration"))],{}),prod(label("variable",sort("Declaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),label("variables",\iter-seps(sort("Variable"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("dataAbstract",sort("Declaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),lit("data"),layouts("LAYOUTLIST"),label("user",sort("UserType")),layouts("LAYOUTLIST"),lit(";")],{})}),
sort("FunctionBody"): choice(sort("FunctionBody"),{prod(label("default",sort("FunctionBody")),[lit("{"),layouts("LAYOUTLIST"),label("statements",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{})}),
\start(sort("Module")): choice(\start(sort("Module")),{prod(\start(sort("Module")),[layouts("LAYOUTLIST"),label("top",sort("Module")),layouts("LAYOUTLIST")],{})}),
sort("Field"): choice(sort("Field"),{prod(label("name",sort("Field")),[label("fieldName",lex("Name"))],{}),prod(label("index",sort("Field")),[label("fieldIndex",sort("IntegerLiteral"))],{})}),
sort("Range"): choice(sort("Range"),{prod(label("character",sort("Range")),[label("character",lex("Char"))],{}),prod(label("fromTo",sort("Range")),[label("start",lex("Char")),layouts("LAYOUTLIST"),lit("-"),layouts("LAYOUTLIST"),label("end",lex("Char"))],{})}),
lex("OptionalComma"): choice(lex("OptionalComma"),{prod(label("default",lex("OptionalComma")),[opt(lit(","))],{})}),
\start(sort("Command")): choice(\start(sort("Command")),{prod(\start(sort("Command")),[layouts("LAYOUTLIST"),label("top",sort("Command")),layouts("LAYOUTLIST")],{})}),
lex("PrePathChars"): choice(lex("PrePathChars"),{prod(lex("PrePathChars"),[lex("URLChars"),lit("\<")],{})}),
lex("StringConstant"): choice(lex("StringConstant"),{prod(lex("StringConstant"),[lit("\""),label("chars",\iter-star(lex("StringCharacter"))),lit("\"")],{\tag("category"("Constant"))})}),
sort("Variable"): choice(sort("Variable"),{prod(label("unInitialized",sort("Variable")),[label("name",lex("Name"))],{}),prod(label("initialized",sort("Variable")),[label("name",lex("Name")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("initial",sort("Expression"))],{})}),
sort("TypeArg"): choice(sort("TypeArg"),{prod(label("default",sort("TypeArg")),[label("type",sort("Type"))],{}),prod(label("named",sort("TypeArg")),[label("type",sort("Type")),layouts("LAYOUTLIST"),label("name",lex("Name"))],{})}),
lex("DateAndTime"): choice(lex("DateAndTime"),{prod(lex("DateAndTime"),[lit("$"),lex("DatePart"),lit("T"),lex("TimePartNoTZ"),lex("TimeZonePart"),lit("$")],{}),prod(lex("DateAndTime"),[lit("$"),lex("DatePart"),lit("T"),conditional(lex("TimePartNoTZ"),{\not-follow(\char-class([range(43,43),range(45,45)]))}),lit("$")],{})}),
sort("StringLiteral"): choice(sort("StringLiteral"),{prod(label("nonInterpolated",sort("StringLiteral")),[label("constant",lex("StringConstant"))],{}),prod(label("interpolated",sort("StringLiteral")),[label("pre",lex("PreStringChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("StringTail"))],{}),prod(label("template",sort("StringLiteral")),[label("pre",lex("PreStringChars")),layouts("LAYOUTLIST"),label("template",sort("StringTemplate")),layouts("LAYOUTLIST"),label("tail",sort("StringTail"))],{})}),
lex("Backslash"): choice(lex("Backslash"),{prod(lex("Backslash"),[conditional(\char-class([range(92,92)]),{\not-follow(\char-class([range(47,47),range(60,60),range(62,62),range(92,92)]))})],{})}),
sort("Bound"): choice(sort("Bound"),{prod(label("default",sort("Bound")),[lit(";"),layouts("LAYOUTLIST"),label("expression",sort("Expression"))],{}),prod(label("empty",sort("Bound")),[],{})}),
lex("Char"): choice(lex("Char"),{prod(lex("Char"),[\char-class([range(1,31),range(33,33),range(35,38),range(40,44),range(46,59),range(61,61),range(63,90),range(94,16777215)])],{\tag("category"("Constant"))}),prod(lex("Char"),[lit("\\"),\char-class([range(32,32),range(34,34),range(39,39),range(45,45),range(60,60),range(62,62),range(91,93),range(98,98),range(102,102),range(110,110),range(114,114),range(116,116)])],{\tag("category"("Constant"))}),prod(lex("Char"),[lex("UnicodeEscape")],{\tag("category"("Constant"))})}),
\start(sort("Commands")): choice(\start(sort("Commands")),{prod(\start(sort("Commands")),[layouts("LAYOUTLIST"),label("top",sort("Commands")),layouts("LAYOUTLIST")],{})}),
lex("CaseInsensitiveStringConstant"): choice(lex("CaseInsensitiveStringConstant"),{prod(lex("CaseInsensitiveStringConstant"),[lit("\'"),label("chars",\iter-star(lex("StringCharacter"))),lit("\'")],{\tag("category"("Constant"))})}),
lex("JustTime"): choice(lex("JustTime"),{prod(lex("JustTime"),[lit("$T"),lex("TimePartNoTZ"),lex("TimeZonePart"),lit("$")],{}),prod(lex("JustTime"),[lit("$T"),conditional(lex("TimePartNoTZ"),{\not-follow(\char-class([range(43,43),range(45,45)]))}),lit("$")],{})}),
sort("Declarator"): choice(sort("Declarator"),{prod(label("default",sort("Declarator")),[label("type",sort("Type")),layouts("LAYOUTLIST"),label("variables",\iter-seps(sort("Variable"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")]))],{})}),
sort("Target"): choice(sort("Target"),{prod(label("empty",sort("Target")),[],{}),prod(label("labeled",sort("Target")),[label("name",lex("Name"))],{})}),
sort("IntegerLiteral"): choice(sort("IntegerLiteral"),{prod(label("octalIntegerLiteral",sort("IntegerLiteral")),[label("octal",lex("OctalIntegerLiteral"))],{}),prod(label("decimalIntegerLiteral",sort("IntegerLiteral")),[label("decimal",lex("DecimalIntegerLiteral"))],{}),prod(label("hexIntegerLiteral",sort("IntegerLiteral")),[label("hex",lex("HexIntegerLiteral"))],{})}),
sort("Pattern"): choice(sort("Pattern"),{priority(sort("Pattern"),[choice(sort("Pattern"),{prod(label("list",sort("Pattern")),[lit("["),layouts("LAYOUTLIST"),label("elements0",\iter-star-seps(sort("Pattern"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("callOrTree",sort("Pattern")),[label("expression",sort("Pattern")),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("arguments",\iter-star-seps(sort("Pattern"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("keywordArguments",\parameterized-sort("KeywordArguments",[sort("Pattern")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("tuple",sort("Pattern")),[lit("\<"),layouts("LAYOUTLIST"),label("elements",\iter-seps(sort("Pattern"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("\>")],{}),prod(label("literal",sort("Pattern")),[label("literal",sort("Literal"))],{}),prod(label("set",sort("Pattern")),[lit("{"),layouts("LAYOUTLIST"),label("elements0",\iter-star-seps(sort("Pattern"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("splice",sort("Pattern")),[lit("*"),layouts("LAYOUTLIST"),label("argument",sort("Pattern"))],{}),prod(label("reifiedType",sort("Pattern")),[lit("type"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("symbol",sort("Pattern")),layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST"),label("definitions",sort("Pattern")),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("typedVariable",sort("Pattern")),[label("type",sort("Type")),layouts("LAYOUTLIST"),label("name",lex("Name"))],{}),prod(label("multiVariable",sort("Pattern")),[label("qualifiedName",sort("QualifiedName")),layouts("LAYOUTLIST"),lit("*")],{}),prod(label("negative",sort("Pattern")),[lit("-"),layouts("LAYOUTLIST"),label("argument",sort("Pattern"))],{}),prod(label("map",sort("Pattern")),[lit("("),layouts("LAYOUTLIST"),label("mappings",\iter-star-seps(\parameterized-sort("Mapping",[sort("Pattern")]),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("qualifiedName",sort("Pattern")),[label("qualifiedName",sort("QualifiedName"))],{}),prod(label("splicePlus",sort("Pattern")),[lit("+"),layouts("LAYOUTLIST"),label("argument",sort("Pattern"))],{})}),choice(sort("Pattern"),{prod(label("descendant",sort("Pattern")),[lit("/"),layouts("LAYOUTLIST"),label("pattern",sort("Pattern"))],{}),prod(label("asType",sort("Pattern")),[lit("["),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),lit("]"),layouts("LAYOUTLIST"),label("argument",sort("Pattern"))],{}),prod(label("variableBecomes",sort("Pattern")),[label("name",lex("Name")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("pattern",sort("Pattern"))],{}),prod(label("typedVariableBecomes",sort("Pattern")),[label("type",sort("Type")),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("pattern",sort("Pattern"))],{}),prod(label("anti",sort("Pattern")),[lit("!"),layouts("LAYOUTLIST"),label("pattern",sort("Pattern"))],{})})]),prod(label("concrete",sort("Pattern")),[label("concrete",lex("Concrete"))],{})}),
sort("Case"): choice(sort("Case"),{prod(label("patternWithAction",sort("Case")),[lit("case"),layouts("LAYOUTLIST"),label("patternWithAction",sort("PatternWithAction"))],{\tag("Foldable"())}),prod(label("default",sort("Case")),[lit("default"),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("statement",sort("Statement"))],{\tag("Foldable"())})}),
lex("PostPathChars"): choice(lex("PostPathChars"),{prod(lex("PostPathChars"),[lit("\>"),lex("URLChars"),lit("|")],{})}),
lex("StringCharacter"): choice(lex("StringCharacter"),{prod(lex("StringCharacter"),[\char-class([range(10,10)]),\iter-star(\char-class([range(9,9),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)])),\char-class([range(39,39)])],{}),prod(lex("StringCharacter"),[lit("\\"),\char-class([range(34,34),range(39,39),range(60,60),range(62,62),range(92,92),range(98,98),range(102,102),range(110,110),range(114,114),range(116,116)])],{}),prod(lex("StringCharacter"),[lex("UnicodeEscape")],{}),prod(lex("StringCharacter"),[\char-class([range(1,33),range(35,38),range(40,59),range(61,61),range(63,91),range(93,16777215)])],{})}),
lex("ConcretePart"): choice(lex("ConcretePart"),{prod(label("gt",lex("ConcretePart")),[lit("\\\>")],{\tag("category"("MetaSkipped"))}),prod(label("hole",lex("ConcretePart")),[label("hole",sort("ConcreteHole"))],{\tag("category"("MetaVariable"))}),prod(label("bs",lex("ConcretePart")),[lit("\\\\")],{\tag("category"("MetaSkipped"))}),prod(label("lt",lex("ConcretePart")),[lit("\\\<")],{\tag("category"("MetaSkipped"))}),prod(label("bq",lex("ConcretePart")),[lit("\\`")],{\tag("category"("MetaSkipped"))}),prod(label("text",lex("ConcretePart")),[conditional(iter(\char-class([range(1,9),range(11,59),range(61,61),range(63,91),range(93,95),range(97,16777215)])),{\not-follow(\char-class([range(1,9),range(11,59),range(61,61),range(63,91),range(93,95),range(97,16777215)]))})],{\tag("category"("MetaSkipped"))}),prod(label("newline",lex("ConcretePart")),[lit("\n"),\iter-star(\char-class([range(9,9),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)])),lit("\'")],{})}),
sort("ImportedModule"): choice(sort("ImportedModule"),{prod(label("actuals",sort("ImportedModule")),[label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),label("actuals",sort("ModuleActuals"))],{}),prod(label("default",sort("ImportedModule")),[label("name",sort("QualifiedName"))],{}),prod(label("renamings",sort("ImportedModule")),[label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),label("renamings",sort("Renamings"))],{}),prod(label("actualsRenaming",sort("ImportedModule")),[label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),label("actuals",sort("ModuleActuals")),layouts("LAYOUTLIST"),label("renamings",sort("Renamings"))],{})}),
lex("PathChars"): choice(lex("PathChars"),{prod(lex("PathChars"),[lex("URLChars"),\char-class([range(124,124)])],{})}),
sort("Strategy"): choice(sort("Strategy"),{prod(label("innermost",sort("Strategy")),[lit("innermost")],{}),prod(label("topDown",sort("Strategy")),[lit("top-down")],{}),prod(label("bottomUpBreak",sort("Strategy")),[lit("bottom-up-break")],{}),prod(label("topDownBreak",sort("Strategy")),[lit("top-down-break")],{}),prod(label("outermost",sort("Strategy")),[lit("outermost")],{}),prod(label("bottomUp",sort("Strategy")),[lit("bottom-up")],{})}),
sort("LocalVariableDeclaration"): choice(sort("LocalVariableDeclaration"),{prod(label("default",sort("LocalVariableDeclaration")),[label("declarator",sort("Declarator"))],{}),prod(label("dynamic",sort("LocalVariableDeclaration")),[lit("dynamic"),layouts("LAYOUTLIST"),label("declarator",sort("Declarator"))],{})}),
sort("FunctionType"): choice(sort("FunctionType"),{prod(label("typeArguments",sort("FunctionType")),[label("type",sort("Type")),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("arguments",\iter-star-seps(sort("TypeArg"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{})}),
sort("Visibility"): choice(sort("Visibility"),{prod(label("private",sort("Visibility")),[lit("private")],{}),prod(label("public",sort("Visibility")),[lit("public")],{}),prod(label("default",sort("Visibility")),[],{})}),
sort("Replacement"): choice(sort("Replacement"),{prod(label("conditional",sort("Replacement")),[label("replacementExpression",sort("Expression")),layouts("LAYOUTLIST"),lit("when"),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")]))],{}),prod(label("unconditional",sort("Replacement")),[label("replacementExpression",sort("Expression"))],{})}),
lex("JustDate"): choice(lex("JustDate"),{prod(lex("JustDate"),[lit("$"),lex("DatePart"),lit("$")],{})}),
lex("NamedBackslash"): choice(lex("NamedBackslash"),{prod(lex("NamedBackslash"),[conditional(\char-class([range(92,92)]),{\not-follow(\char-class([range(60,60),range(62,62),range(92,92)]))})],{})}),
sort("Assoc"): choice(sort("Assoc"),{prod(label("left",sort("Assoc")),[lit("left")],{}),prod(label("associative",sort("Assoc")),[lit("assoc")],{}),prod(label("right",sort("Assoc")),[lit("right")],{}),prod(label("nonAssociative",sort("Assoc")),[lit("non-assoc")],{})}),
sort("PathTail"): choice(sort("PathTail"),{prod(label("mid",sort("PathTail")),[label("mid",lex("MidPathChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("PathTail"))],{}),prod(label("post",sort("PathTail")),[label("post",lex("PostPathChars"))],{})}),
lex("MidProtocolChars"): choice(lex("MidProtocolChars"),{prod(lex("MidProtocolChars"),[lit("\>"),lex("URLChars"),lit("\<")],{})}),
sort("Kind"): choice(sort("Kind"),{prod(label("all",sort("Kind")),[lit("all")],{}),prod(label("variable",sort("Kind")),[lit("variable")],{}),prod(label("alias",sort("Kind")),[lit("alias")],{}),prod(label("module",sort("Kind")),[lit("module")],{}),prod(label("anno",sort("Kind")),[lit("anno")],{}),prod(label("data",sort("Kind")),[lit("data")],{}),prod(label("view",sort("Kind")),[lit("view")],{}),prod(label("tag",sort("Kind")),[lit("tag")],{}),prod(label("function",sort("Kind")),[lit("function")],{})}),
keywords("RascalKeywords"): choice(keywords("RascalKeywords"),{prod(keywords("RascalKeywords"),[lit("break")],{}),prod(keywords("RascalKeywords"),[lit("for")],{}),prod(keywords("RascalKeywords"),[lit("str")],{}),prod(keywords("RascalKeywords"),[lit("node")],{}),prod(keywords("RascalKeywords"),[lit("tuple")],{}),prod(keywords("RascalKeywords"),[lit("solve")],{}),prod(keywords("RascalKeywords"),[lit("rat")],{}),prod(keywords("RascalKeywords"),[lit("dynamic")],{}),prod(keywords("RascalKeywords"),[lit("assoc")],{}),prod(keywords("RascalKeywords"),[lit("bag")],{}),prod(keywords("RascalKeywords"),[lit("set")],{}),prod(keywords("RascalKeywords"),[lit("o")],{}),prod(keywords("RascalKeywords"),[lit("start")],{}),prod(keywords("RascalKeywords"),[sort("BasicType")],{}),prod(keywords("RascalKeywords"),[lit("lrel")],{}),prod(keywords("RascalKeywords"),[lit("continue")],{}),prod(keywords("RascalKeywords"),[lit("bracket")],{}),prod(keywords("RascalKeywords"),[lit("rel")],{}),prod(keywords("RascalKeywords"),[lit("list")],{}),prod(keywords("RascalKeywords"),[lit("test")],{}),prod(keywords("RascalKeywords"),[lit("return")],{}),prod(keywords("RascalKeywords"),[lit("false")],{}),prod(keywords("RascalKeywords"),[lit("join")],{}),prod(keywords("RascalKeywords"),[lit("else")],{}),prod(keywords("RascalKeywords"),[lit("it")],{}),prod(keywords("RascalKeywords"),[lit("in")],{}),prod(keywords("RascalKeywords"),[lit("if")],{}),prod(keywords("RascalKeywords"),[lit("non-assoc")],{}),prod(keywords("RascalKeywords"),[lit("lexical")],{}),prod(keywords("RascalKeywords"),[lit("value")],{}),prod(keywords("RascalKeywords"),[lit("map")],{}),prod(keywords("RascalKeywords"),[lit("visit")],{}),prod(keywords("RascalKeywords"),[lit("all")],{}),prod(keywords("RascalKeywords"),[lit("try")],{}),prod(keywords("RascalKeywords"),[lit("private")],{}),prod(keywords("RascalKeywords"),[lit("true")],{}),prod(keywords("RascalKeywords"),[lit("finally")],{}),prod(keywords("RascalKeywords"),[lit("real")],{}),prod(keywords("RascalKeywords"),[lit("void")],{}),prod(keywords("RascalKeywords"),[lit("keyword")],{}),prod(keywords("RascalKeywords"),[lit("any")],{}),prod(keywords("RascalKeywords"),[lit("one")],{}),prod(keywords("RascalKeywords"),[lit("module")],{}),prod(keywords("RascalKeywords"),[lit("public")],{}),prod(keywords("RascalKeywords"),[lit("throws")],{}),prod(keywords("RascalKeywords"),[lit("alias")],{}),prod(keywords("RascalKeywords"),[lit("default")],{}),prod(keywords("RascalKeywords"),[lit("catch")],{}),prod(keywords("RascalKeywords"),[lit("insert")],{}),prod(keywords("RascalKeywords"),[lit("anno")],{}),prod(keywords("RascalKeywords"),[lit("throw")],{}),prod(keywords("RascalKeywords"),[lit("bool")],{}),prod(keywords("RascalKeywords"),[lit("switch")],{}),prod(keywords("RascalKeywords"),[lit("type")],{}),prod(keywords("RascalKeywords"),[lit("while")],{}),prod(keywords("RascalKeywords"),[lit("notin")],{}),prod(keywords("RascalKeywords"),[lit("case")],{}),prod(keywords("RascalKeywords"),[lit("layout")],{}),prod(keywords("RascalKeywords"),[lit("mod")],{}),prod(keywords("RascalKeywords"),[lit("extend")],{}),prod(keywords("RascalKeywords"),[lit("append")],{}),prod(keywords("RascalKeywords"),[lit("fail")],{}),prod(keywords("RascalKeywords"),[lit("datetime")],{}),prod(keywords("RascalKeywords"),[lit("filter")],{}),prod(keywords("RascalKeywords"),[lit("loc")],{}),prod(keywords("RascalKeywords"),[lit("assert")],{}),prod(keywords("RascalKeywords"),[lit("data")],{}),prod(keywords("RascalKeywords"),[lit("import")],{}),prod(keywords("RascalKeywords"),[lit("num")],{}),prod(keywords("RascalKeywords"),[lit("tag")],{}),prod(keywords("RascalKeywords"),[lit("syntax")],{}),prod(keywords("RascalKeywords"),[lit("int")],{})}),
sort("Label"): choice(sort("Label"),{prod(label("default",sort("Label")),[label("name",lex("Name")),layouts("LAYOUTLIST"),lit(":")],{}),prod(label("empty",sort("Label")),[],{})}),
lex("OctalIntegerLiteral"): choice(lex("OctalIntegerLiteral"),{prod(lex("OctalIntegerLiteral"),[\char-class([range(48,48)]),conditional(iter(\char-class([range(48,55)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})],{})}),
sort("DateTimeLiteral"): choice(sort("DateTimeLiteral"),{prod(label("dateLiteral",sort("DateTimeLiteral")),[label("date",lex("JustDate"))],{}),prod(label("timeLiteral",sort("DateTimeLiteral")),[label("time",lex("JustTime"))],{}),prod(label("dateAndTimeLiteral",sort("DateTimeLiteral")),[label("dateAndTime",lex("DateAndTime"))],{})}),
sort("Prod"): choice(sort("Prod"),{priority(sort("Prod"),[choice(sort("Prod"),{prod(label("associativityGroup",sort("Prod")),[label("associativity",sort("Assoc")),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("group",sort("Prod")),layouts("LAYOUTLIST"),lit(")")],{\tag("Foldable"())}),prod(label("reference",sort("Prod")),[lit(":"),layouts("LAYOUTLIST"),label("referenced",lex("Name"))],{}),prod(label("unlabeled",sort("Prod")),[label("modifiers",\iter-star-seps(sort("ProdModifier"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("syms",\iter-star-seps(sort("Sym"),[layouts("LAYOUTLIST")]))],{}),prod(label("others",sort("Prod")),[lit("...")],{}),prod(label("labeled",sort("Prod")),[label("modifiers",\iter-star-seps(sort("ProdModifier"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("syms",\iter-star-seps(sort("Sym"),[layouts("LAYOUTLIST")]))],{})}),prod(label("all",sort("Prod")),[label("lhs",sort("Prod")),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("rhs",sort("Prod"))],{}),prod(label("first",sort("Prod")),[label("lhs",sort("Prod")),layouts("LAYOUTLIST"),conditional(lit("\>"),{\not-follow(lit("\>"))}),layouts("LAYOUTLIST"),label("rhs",sort("Prod"))],{})])}),
layouts("LAYOUTLIST"): choice(layouts("LAYOUTLIST"),{prod(layouts("LAYOUTLIST"),[conditional(\iter-star(lex("LAYOUT")),{\not-follow(\char-class([range(9,13),range(32,32),range(133,133),range(160,160),range(5760,5760),range(6158,6158),range(8192,8202),range(8232,8233),range(8239,8239),range(8287,8287),range(12288,12288)])),\not-follow(lit("//")),\not-follow(lit("/*"))})],{})}),
lex("Comment"): choice(lex("Comment"),{prod(lex("Comment"),[lit("//"),conditional(\iter-star(\char-class([range(1,9),range(11,16777215)])),{\not-follow(\char-class([range(9,9),range(13,13),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)])),\end-of-line()})],{\tag("category"("Comment"))}),prod(lex("Comment"),[lit("/*"),\iter-star(alt({conditional(\char-class([range(42,42)]),{\not-follow(\char-class([range(47,47)]))}),\char-class([range(1,41),range(43,16777215)])})),lit("*/")],{\tag("category"("Comment"))})}),
lex("UnicodeEscape"): choice(lex("UnicodeEscape"),{prod(label("utf32",lex("UnicodeEscape")),[lit("\\"),\char-class([range(85,85)]),alt({lit("10"),seq([lit("0"),\char-class([range(48,57),range(65,70),range(97,102)])])}),\char-class([range(48,57),range(65,70),range(97,102)]),\char-class([range(48,57),range(65,70),range(97,102)]),\char-class([range(48,57),range(65,70),range(97,102)]),\char-class([range(48,57),range(65,70),range(97,102)])],{}),prod(label("utf16",lex("UnicodeEscape")),[lit("\\"),\char-class([range(117,117)]),\char-class([range(48,57),range(65,70),range(97,102)]),\char-class([range(48,57),range(65,70),range(97,102)]),\char-class([range(48,57),range(65,70),range(97,102)]),\char-class([range(48,57),range(65,70),range(97,102)])],{}),prod(label("ascii",lex("UnicodeEscape")),[lit("\\"),\char-class([range(97,97)]),\char-class([range(48,55)]),\char-class([range(48,57),range(65,70),range(97,102)])],{})}),
sort("SyntaxDefinition"): choice(sort("SyntaxDefinition"),{prod(label("keyword",sort("SyntaxDefinition")),[lit("keyword"),layouts("LAYOUTLIST"),label("defined",sort("Sym")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("production",sort("Prod")),layouts("LAYOUTLIST"),lit(";")],{\tag("Foldable"())}),prod(label("language",sort("SyntaxDefinition")),[label("start",sort("Start")),layouts("LAYOUTLIST"),lit("syntax"),layouts("LAYOUTLIST"),label("defined",sort("Sym")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("production",sort("Prod")),layouts("LAYOUTLIST"),lit(";")],{\tag("Foldable"())}),prod(label("lexical",sort("SyntaxDefinition")),[lit("lexical"),layouts("LAYOUTLIST"),label("defined",sort("Sym")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("production",sort("Prod")),layouts("LAYOUTLIST"),lit(";")],{\tag("Foldable"())}),prod(label("layout",sort("SyntaxDefinition")),[label("vis",sort("Visibility")),layouts("LAYOUTLIST"),lit("layout"),layouts("LAYOUTLIST"),label("defined",sort("Sym")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("production",sort("Prod")),layouts("LAYOUTLIST"),lit(";")],{\tag("Foldable"())})}),
sort("ModuleParameters"): choice(sort("ModuleParameters"),{prod(label("default",sort("ModuleParameters")),[lit("["),layouts("LAYOUTLIST"),label("parameters",\iter-seps(sort("TypeVar"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{})}),
lex("DatePart"): choice(lex("DatePart"),{prod(lex("DatePart"),[\char-class([range(48,57)]),\char-class([range(48,57)]),\char-class([range(48,57)]),\char-class([range(48,57)]),\char-class([range(48,49)]),\char-class([range(48,57)]),\char-class([range(48,51)]),\char-class([range(48,57)])],{}),prod(lex("DatePart"),[\char-class([range(48,57)]),\char-class([range(48,57)]),\char-class([range(48,57)]),\char-class([range(48,57)]),lit("-"),\char-class([range(48,49)]),\char-class([range(48,57)]),lit("-"),\char-class([range(48,51)]),\char-class([range(48,57)])],{})}),
sort("Assignable"): choice(sort("Assignable"),{prod(label("constructor",sort("Assignable")),[label("name",lex("Name")),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("arguments",\iter-seps(sort("Assignable"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("subscript",sort("Assignable")),[label("receiver",sort("Assignable")),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("subscript",sort("Expression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("tuple",sort("Assignable")),[lit("\<"),layouts("LAYOUTLIST"),label("elements",\iter-seps(sort("Assignable"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("\>")],{}),prod(label("variable",sort("Assignable")),[label("qualifiedName",sort("QualifiedName"))],{}),prod(label("bracket",sort("Assignable")),[lit("("),layouts("LAYOUTLIST"),label("arg",sort("Assignable")),layouts("LAYOUTLIST"),lit(")")],{\bracket()}),prod(label("sliceStep",sort("Assignable")),[label("receiver",sort("Assignable")),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("optFirst",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST"),label("second",sort("Expression")),layouts("LAYOUTLIST"),lit(".."),layouts("LAYOUTLIST"),label("optLast",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("fieldAccess",sort("Assignable")),[label("receiver",sort("Assignable")),layouts("LAYOUTLIST"),lit("."),layouts("LAYOUTLIST"),label("field",lex("Name"))],{}),prod(label("slice",sort("Assignable")),[label("receiver",sort("Assignable")),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("optFirst",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit(".."),layouts("LAYOUTLIST"),label("optLast",sort("OptionalExpression")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("annotation",sort("Assignable")),[label("receiver",sort("Assignable")),layouts("LAYOUTLIST"),lit("@"),layouts("LAYOUTLIST"),label("annotation",lex("Name"))],{}),prod(label("ifDefinedOrDefault",sort("Assignable")),[label("receiver",sort("Assignable")),layouts("LAYOUTLIST"),lit("?"),layouts("LAYOUTLIST"),label("defaultExpression",sort("Expression"))],{})}),
lex("RationalLiteral"): choice(lex("RationalLiteral"),{prod(lex("RationalLiteral"),[\char-class([range(49,57)]),\iter-star(\char-class([range(48,57)])),\char-class([range(114,114)]),\char-class([range(48,57)]),conditional(\iter-star(\char-class([range(48,57)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})],{}),prod(lex("RationalLiteral"),[\char-class([range(48,57)]),\iter-star(\char-class([range(48,57)])),\char-class([range(114,114)])],{})}),
sort("ProtocolTail"): choice(sort("ProtocolTail"),{prod(label("mid",sort("ProtocolTail")),[label("mid",lex("MidProtocolChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("ProtocolTail"))],{}),prod(label("post",sort("ProtocolTail")),[label("post",lex("PostProtocolChars"))],{})}),
\parameterized-sort("KeywordArguments",[parameter("T",adt("Tree",[]))]): choice(\parameterized-sort("KeywordArguments",[parameter("T",adt("Tree",[]))]),{prod(label("none",\parameterized-sort("KeywordArguments",[parameter("T",adt("Tree",[]))])),[],{}),prod(label("default",\parameterized-sort("KeywordArguments",[parameter("T",adt("Tree",[]))])),[label("optionalComma",lex("OptionalComma")),layouts("LAYOUTLIST"),conditional(label("keywordArgumentList",\iter-seps(\parameterized-sort("KeywordArgument",[parameter("T",adt("Tree",[]))]),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),{precede(\char-class([range(9,10),range(32,32),range(40,40),range(44,44)]))})],{})}),
sort("Commands"): choice(sort("Commands"),{prod(label("commandlist",sort("Commands")),[label("commands",\iter-seps(sort("EvalCommand"),[layouts("LAYOUTLIST")]))],{})}),
sort("BasicType"): choice(sort("BasicType"),{prod(label("int",sort("BasicType")),[lit("int")],{}),prod(label("listRelation",sort("BasicType")),[lit("lrel")],{}),prod(label("bool",sort("BasicType")),[lit("bool")],{}),prod(label("type",sort("BasicType")),[lit("type")],{}),prod(label("set",sort("BasicType")),[lit("set")],{}),prod(label("bag",sort("BasicType")),[lit("bag")],{}),prod(label("rational",sort("BasicType")),[lit("rat")],{}),prod(label("real",sort("BasicType")),[lit("real")],{}),prod(label("node",sort("BasicType")),[lit("node")],{}),prod(label("tuple",sort("BasicType")),[lit("tuple")],{}),prod(label("map",sort("BasicType")),[lit("map")],{}),prod(label("loc",sort("BasicType")),[lit("loc")],{}),prod(label("num",sort("BasicType")),[lit("num")],{}),prod(label("list",sort("BasicType")),[lit("list")],{}),prod(label("value",sort("BasicType")),[lit("value")],{}),prod(label("void",sort("BasicType")),[lit("void")],{}),prod(label("relation",sort("BasicType")),[lit("rel")],{}),prod(label("dateTime",sort("BasicType")),[lit("datetime")],{}),prod(label("string",sort("BasicType")),[lit("str")],{})}),
lex("RegExpModifier"): choice(lex("RegExpModifier"),{prod(lex("RegExpModifier"),[\iter-star(\char-class([range(100,100),range(105,105),range(109,109),range(115,115)]))],{})}),
sort("CommonKeywordParameters"): choice(sort("CommonKeywordParameters"),{prod(label("present",sort("CommonKeywordParameters")),[lit("("),layouts("LAYOUTLIST"),label("keywordFormalList",\iter-seps(sort("KeywordFormal"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("absent",sort("CommonKeywordParameters")),[],{})}),
\parameterized-sort("Mapping",[parameter("T",adt("Tree",[]))]): choice(\parameterized-sort("Mapping",[parameter("T",adt("Tree",[]))]),{prod(label("default",\parameterized-sort("Mapping",[parameter("T",adt("Tree",[]))])),[label("from",conditional(parameter("T",adt("Tree",[])),{except("ifDefinedOtherwise")})),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("to",parameter("T",adt("Tree",[])))],{})}),
sort("Command"): choice(sort("Command"),{prod(label("import",sort("Command")),[label("imported",sort("Import"))],{}),prod(label("expression",sort("Command")),[label("expression",conditional(sort("Expression"),{except("nonEmptyBlock")}))],{}),prod(label("statement",sort("Command")),[label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("visit"),except("functionDeclaration")}))],{}),prod(label("shell",sort("Command")),[lit(":"),layouts("LAYOUTLIST"),label("command",sort("ShellCommand"))],{}),prod(label("declaration",sort("Command")),[label("declaration",sort("Declaration"))],{})}),
sort("StringTemplate"): choice(sort("StringTemplate"),{prod(label("ifThen",sort("StringTemplate")),[lit("if"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("preStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("body",sort("StringMiddle")),layouts("LAYOUTLIST"),label("postStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("while",sort("StringTemplate")),[lit("while"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("condition",sort("Expression")),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("preStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("body",sort("StringMiddle")),layouts("LAYOUTLIST"),label("postStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("ifThenElse",sort("StringTemplate")),[lit("if"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("preStatsThen",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("thenString",sort("StringMiddle")),layouts("LAYOUTLIST"),label("postStatsThen",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}"),layouts("LAYOUTLIST"),lit("else"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("preStatsElse",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("elseString",sort("StringMiddle")),layouts("LAYOUTLIST"),label("postStatsElse",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("doWhile",sort("StringTemplate")),[lit("do"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("preStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("body",sort("StringMiddle")),layouts("LAYOUTLIST"),label("postStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}"),layouts("LAYOUTLIST"),lit("while"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("condition",sort("Expression")),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("for",sort("StringTemplate")),[lit("for"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("preStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("body",sort("StringMiddle")),layouts("LAYOUTLIST"),label("postStats",\iter-star-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{})}),
sort("ProtocolPart"): choice(sort("ProtocolPart"),{prod(label("interpolated",sort("ProtocolPart")),[label("pre",lex("PreProtocolChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("ProtocolTail"))],{}),prod(label("nonInterpolated",sort("ProtocolPart")),[label("protocolChars",lex("ProtocolChars"))],{})}),
sort("Visit"): choice(sort("Visit"),{prod(label("defaultStrategy",sort("Visit")),[lit("visit"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("subject",sort("Expression")),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("cases",\iter-seps(sort("Case"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("givenStrategy",sort("Visit")),[label("strategy",sort("Strategy")),layouts("LAYOUTLIST"),lit("visit"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("subject",sort("Expression")),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("cases",\iter-seps(sort("Case"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{})}),
sort("StructuredType"): choice(sort("StructuredType"),{prod(label("default",sort("StructuredType")),[label("basicType",sort("BasicType")),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("arguments",\iter-seps(sort("TypeArg"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{})}),
lex("NamedRegExp"): choice(lex("NamedRegExp"),{prod(lex("NamedRegExp"),[lex("NamedBackslash")],{}),prod(lex("NamedRegExp"),[\char-class([range(1,46),range(48,59),range(61,61),range(63,91),range(93,16777215)])],{}),prod(lex("NamedRegExp"),[\char-class([range(92,92)]),\char-class([range(47,47),range(60,60),range(62,62),range(92,92)])],{}),prod(lex("NamedRegExp"),[lit("\<"),lex("Name"),lit("\>")],{})}),
sort("Parameters"): choice(sort("Parameters"),{prod(label("default",sort("Parameters")),[lit("("),layouts("LAYOUTLIST"),label("formals",sort("Formals")),layouts("LAYOUTLIST"),label("keywordFormals",sort("KeywordFormals")),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("varArgs",sort("Parameters")),[lit("("),layouts("LAYOUTLIST"),label("formals",sort("Formals")),layouts("LAYOUTLIST"),lit("..."),layouts("LAYOUTLIST"),label("keywordFormals",sort("KeywordFormals")),layouts("LAYOUTLIST"),lit(")")],{})}),
lex("DecimalIntegerLiteral"): choice(lex("DecimalIntegerLiteral"),{prod(lex("DecimalIntegerLiteral"),[\char-class([range(49,57)]),conditional(\iter-star(\char-class([range(48,57)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})],{}),prod(lex("DecimalIntegerLiteral"),[conditional(lit("0"),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})],{})}),
lex("PreProtocolChars"): choice(lex("PreProtocolChars"),{prod(lex("PreProtocolChars"),[lit("|"),lex("URLChars"),lit("\<")],{})}),
sort("Header"): choice(sort("Header"),{prod(label("parameters",sort("Header")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),lit("module"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),label("params",sort("ModuleParameters")),layouts("LAYOUTLIST"),label("imports",\iter-star-seps(sort("Import"),[layouts("LAYOUTLIST")]))],{}),prod(label("default",sort("Header")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),lit("module"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),label("imports",\iter-star-seps(sort("Import"),[layouts("LAYOUTLIST")]))],{})}),
sort("TypeVar"): choice(sort("TypeVar"),{prod(label("bounded",sort("TypeVar")),[lit("&"),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit("\<:"),layouts("LAYOUTLIST"),label("bound",sort("Type"))],{}),prod(label("free",sort("TypeVar")),[lit("&"),layouts("LAYOUTLIST"),label("name",lex("Name"))],{})}),
lex("PostProtocolChars"): choice(lex("PostProtocolChars"),{prod(lex("PostProtocolChars"),[lit("\>"),lex("URLChars"),lit("://")],{})}),
lex("Concrete"): choice(lex("Concrete"),{prod(label("typed",lex("Concrete")),[lit("("),label("l1",layouts("LAYOUTLIST")),label("symbol",sort("Sym")),label("l2",layouts("LAYOUTLIST")),lit(")"),label("l3",layouts("LAYOUTLIST")),lit("`"),label("parts",\iter-star(lex("ConcretePart"))),lit("`")],{})}),
lex("ProtocolChars"): choice(lex("ProtocolChars"),{prod(lex("ProtocolChars"),[\char-class([range(124,124)]),lex("URLChars"),conditional(lit("://"),{\not-follow(\char-class([range(9,10),range(13,13),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)]))})],{})}),
sort("Assignment"): choice(sort("Assignment"),{prod(label("product",sort("Assignment")),[lit("*=")],{}),prod(label("division",sort("Assignment")),[lit("/=")],{}),prod(label("default",sort("Assignment")),[lit("=")],{}),prod(label("intersection",sort("Assignment")),[lit("&=")],{}),prod(label("addition",sort("Assignment")),[lit("+=")],{}),prod(label("ifDefined",sort("Assignment")),[lit("?=")],{}),prod(label("append",sort("Assignment")),[lit("\<\<=")],{}),prod(label("subtraction",sort("Assignment")),[lit("-=")],{})}),
sort("PatternWithAction"): choice(sort("PatternWithAction"),{prod(label("arbitrary",sort("PatternWithAction")),[label("pattern",sort("Pattern")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("statement",sort("Statement"))],{}),prod(label("replacing",sort("PatternWithAction")),[label("pattern",sort("Pattern")),layouts("LAYOUTLIST"),lit("=\>"),layouts("LAYOUTLIST"),label("replacement",sort("Replacement"))],{})}),
sort("Module"): choice(sort("Module"),{prod(label("default",sort("Module")),[label("header",sort("Header")),layouts("LAYOUTLIST"),label("body",sort("Body"))],{})}),
lex("MidStringChars"): choice(lex("MidStringChars"),{prod(lex("MidStringChars"),[\char-class([range(62,62)]),\iter-star(lex("StringCharacter")),\char-class([range(60,60)])],{\tag("category"("Constant"))})}),
sort("Toplevel"): choice(sort("Toplevel"),{prod(label("givenVisibility",sort("Toplevel")),[label("declaration",sort("Declaration"))],{})}),
lex("TimePartNoTZ"): choice(lex("TimePartNoTZ"),{prod(lex("TimePartNoTZ"),[\char-class([range(48,50)]),\char-class([range(48,57)]),lit(":"),\char-class([range(48,53)]),\char-class([range(48,57)]),lit(":"),\char-class([range(48,53)]),\char-class([range(48,57)]),opt(seq([\char-class([range(44,44),range(46,46)]),\char-class([range(48,57)]),opt(seq([\char-class([range(48,57)]),opt(\char-class([range(48,57)]))]))]))],{}),prod(lex("TimePartNoTZ"),[\char-class([range(48,50)]),\char-class([range(48,57)]),\char-class([range(48,53)]),\char-class([range(48,57)]),\char-class([range(48,53)]),\char-class([range(48,57)]),opt(seq([\char-class([range(44,44),range(46,46)]),\char-class([range(48,57)]),opt(seq([\char-class([range(48,57)]),opt(\char-class([range(48,57)]))]))]))],{})}),
lex("BooleanLiteral"): choice(lex("BooleanLiteral"),{prod(lex("BooleanLiteral"),[lit("false")],{}),prod(lex("BooleanLiteral"),[lit("true")],{})}),
sort("Statement"): choice(sort("Statement"),{prod(label("tryFinally",sort("Statement")),[lit("try"),layouts("LAYOUTLIST"),label("body",sort("Statement")),layouts("LAYOUTLIST"),label("handlers",\iter-seps(sort("Catch"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("finally"),layouts("LAYOUTLIST"),label("finallyBody",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\tag("breakable"())}),prod(label("expression",sort("Statement")),[label("expression",conditional(sort("Expression"),{except("nonEmptyBlock"),except("visit")})),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("continue",sort("Statement")),[lit("continue"),layouts("LAYOUTLIST"),label("target",sort("Target")),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("functionDeclaration",sort("Statement")),[label("functionDeclaration",sort("FunctionDeclaration"))],{\tag("breakable"())}),prod(label("assignment",sort("Statement")),[label("assignable",sort("Assignable")),layouts("LAYOUTLIST"),label("operator",sort("Assignment")),layouts("LAYOUTLIST"),label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\tag("breakable"())}),prod(label("try",sort("Statement")),[lit("try"),layouts("LAYOUTLIST"),label("body",sort("Statement")),layouts("LAYOUTLIST"),label("handlers",\iter-seps(sort("Catch"),[layouts("LAYOUTLIST")]))],{\assoc(\non-assoc()),\tag("breakable"())}),prod(label("variableDeclaration",sort("Statement")),[label("declaration",sort("LocalVariableDeclaration")),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("ifThen",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("if"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),label("thenStatement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")})),layouts("LAYOUTLIST"),conditional(empty(),{\not-follow(lit("else"))})],{\tag("breakable"())}),prod(label("solve",sort("Statement")),[lit("solve"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("variables",\iter-seps(sort("QualifiedName"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("bound",sort("Bound")),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),label("body",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\tag("breakable"())}),prod(label("filter",sort("Statement")),[lit("filter"),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("switch",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("switch"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("cases",\iter-seps(sort("Case"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{\tag("breakable"())}),prod(label("fail",sort("Statement")),[lit("fail"),layouts("LAYOUTLIST"),label("target",sort("Target")),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("assert",sort("Statement")),[lit("assert"),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("nonEmptyBlock",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("{"),layouts("LAYOUTLIST"),label("statements",\iter-seps(sort("Statement"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{}),prod(label("while",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("while"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),label("body",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\tag("breakable"())}),prod(label("doWhile",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("do"),layouts("LAYOUTLIST"),label("body",sort("Statement")),layouts("LAYOUTLIST"),lit("while"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("condition",sort("Expression")),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),associativity(sort("Statement"),\non-assoc(),{prod(label("throw",sort("Statement")),[lit("throw"),layouts("LAYOUTLIST"),label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\assoc(\non-assoc()),\tag("breakable"())}),prod(label("append",sort("Statement")),[lit("append"),layouts("LAYOUTLIST"),label("dataTarget",sort("DataTarget")),layouts("LAYOUTLIST"),label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\assoc(\non-assoc()),\tag("breakable"())}),prod(label("return",sort("Statement")),[lit("return"),layouts("LAYOUTLIST"),label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\assoc(\non-assoc()),\tag("breakable"())}),prod(label("insert",sort("Statement")),[lit("insert"),layouts("LAYOUTLIST"),label("dataTarget",sort("DataTarget")),layouts("LAYOUTLIST"),label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\assoc(\non-assoc()),\tag("breakable"())})}),prod(label("visit",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),label("visit",sort("Visit"))],{\tag("breakable"())}),prod(label("break",sort("Statement")),[lit("break"),layouts("LAYOUTLIST"),label("target",sort("Target")),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("for",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("for"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),label("body",sort("Statement"))],{\tag("breakable"()),\tag("breakable"("{generators}"))}),prod(label("ifThenElse",sort("Statement")),[label("label",sort("Label")),layouts("LAYOUTLIST"),lit("if"),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")"),layouts("LAYOUTLIST"),label("thenStatement",sort("Statement")),layouts("LAYOUTLIST"),lit("else"),layouts("LAYOUTLIST"),label("elseStatement",conditional(sort("Statement"),{except("variableDeclaration"),except("functionDeclaration")}))],{\tag("breakable"())}),prod(label("emptyStatement",sort("Statement")),[lit(";")],{}),prod(label("globalDirective",sort("Statement")),[lit("global"),layouts("LAYOUTLIST"),label("type",sort("Type")),layouts("LAYOUTLIST"),label("names",\iter-seps(sort("QualifiedName"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())}),prod(label("assertWithMessage",sort("Statement")),[lit("assert"),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("message",sort("Expression")),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"())})}),
sort("Literal"): choice(sort("Literal"),{prod(label("dateTime",sort("Literal")),[label("dateTimeLiteral",sort("DateTimeLiteral"))],{}),prod(label("integer",sort("Literal")),[label("integerLiteral",sort("IntegerLiteral"))],{}),prod(label("boolean",sort("Literal")),[label("booleanLiteral",lex("BooleanLiteral"))],{}),prod(label("location",sort("Literal")),[label("locationLiteral",sort("LocationLiteral"))],{}),prod(label("real",sort("Literal")),[label("realLiteral",lex("RealLiteral"))],{}),prod(label("string",sort("Literal")),[label("stringLiteral",sort("StringLiteral"))],{}),prod(label("rational",sort("Literal")),[label("rationalLiteral",lex("RationalLiteral"))],{}),prod(label("regExp",sort("Literal")),[label("regExpLiteral",lex("RegExpLiteral"))],{})}),
sort("EvalCommand"): choice(sort("EvalCommand"),{prod(label("import",sort("EvalCommand")),[label("imported",sort("Import"))],{}),prod(label("declaration",sort("EvalCommand")),[label("declaration",sort("Declaration"))],{}),prod(label("statement",sort("EvalCommand")),[label("statement",conditional(sort("Statement"),{except("variableDeclaration"),except("visit"),except("functionDeclaration")}))],{})}),
sort("FunctionModifier"): choice(sort("FunctionModifier"),{prod(label("test",sort("FunctionModifier")),[lit("test")],{}),prod(label("default",sort("FunctionModifier")),[lit("default")],{}),prod(label("java",sort("FunctionModifier")),[lit("java")],{})}),
sort("ProdModifier"): choice(sort("ProdModifier"),{prod(label("bracket",sort("ProdModifier")),[lit("bracket")],{}),prod(label("tag",sort("ProdModifier")),[label("tag",sort("Tag"))],{}),prod(label("associativity",sort("ProdModifier")),[label("associativity",sort("Assoc"))],{})}),
lex("RegExpLiteral"): choice(lex("RegExpLiteral"),{prod(lex("RegExpLiteral"),[lit("/"),\iter-star(lex("RegExp")),lit("/"),lex("RegExpModifier")],{})}),
lex("RegExp"): choice(lex("RegExp"),{prod(lex("RegExp"),[lex("Backslash")],{}),prod(lex("RegExp"),[\char-class([range(92,92)]),\char-class([range(47,47),range(60,60),range(62,62),range(92,92)])],{}),prod(lex("RegExp"),[lit("\<"),lex("Name"),lit("\>")],{}),prod(lex("RegExp"),[\char-class([range(1,46),range(48,59),range(61,61),range(63,91),range(93,16777215)])],{}),prod(lex("RegExp"),[lit("\<"),lex("Name"),lit(":"),\iter-star(lex("NamedRegExp")),lit("\>")],{})}),
lex("Nonterminal"): choice(lex("Nonterminal"),{prod(lex("Nonterminal"),[conditional(seq([conditional(\char-class([range(65,90)]),{\not-precede(\char-class([range(65,90)]))}),conditional(\iter-star(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})]),{delete(keywords("RascalKeywords"))})],{})}),
lex("PreStringChars"): choice(lex("PreStringChars"),{prod(lex("PreStringChars"),[\char-class([range(34,34)]),\iter-star(lex("StringCharacter")),\char-class([range(60,60)])],{\tag("category"("Constant"))})}),
sort("StringTail"): choice(sort("StringTail"),{prod(label("post",sort("StringTail")),[label("post",lex("PostStringChars"))],{}),prod(label("midInterpolated",sort("StringTail")),[label("mid",lex("MidStringChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("StringTail"))],{}),prod(label("midTemplate",sort("StringTail")),[label("mid",lex("MidStringChars")),layouts("LAYOUTLIST"),label("template",sort("StringTemplate")),layouts("LAYOUTLIST"),label("tail",sort("StringTail"))],{})}),
sort("DataTypeSelector"): choice(sort("DataTypeSelector"),{prod(label("selector",sort("DataTypeSelector")),[label("sort",sort("QualifiedName")),layouts("LAYOUTLIST"),lit("."),layouts("LAYOUTLIST"),label("production",lex("Name"))],{})}),
lex("TagString"): choice(lex("TagString"),{prod(lex("TagString"),[conditional(lit("{"),{\not-precede(lit("\\"))}),label("contents",\iter-star(alt({\char-class([range(1,122),range(124,124),range(126,16777215)]),seq([lit("\\"),\char-class([range(123,123),range(125,125)])]),lex("TagString")}))),conditional(lit("}"),{\not-precede(lit("\\"))})],{})}),
lex("NonterminalLabel"): choice(lex("NonterminalLabel"),{prod(lex("NonterminalLabel"),[\char-class([range(97,122)]),conditional(\iter-star(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})],{})}),
\parameterized-sort("KeywordArgument",[parameter("T",adt("Tree",[]))]): choice(\parameterized-sort("KeywordArgument",[parameter("T",adt("Tree",[]))]),{prod(label("default",\parameterized-sort("KeywordArgument",[parameter("T",adt("Tree",[]))])),[label("name",lex("Name")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("expression",parameter("T",adt("Tree",[])))],{})}),
lex("Name"): choice(lex("Name"),{prod(lex("Name"),[conditional(seq([conditional(\char-class([range(65,90),range(95,95),range(97,122)]),{\not-precede(\char-class([range(65,90),range(95,95),range(97,122)]))}),conditional(\iter-star(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})]),{delete(keywords("RascalKeywords"))})],{}),prod(lex("Name"),[\char-class([range(92,92)]),\char-class([range(65,90),range(95,95),range(97,122)]),conditional(\iter-star(\char-class([range(45,45),range(48,57),range(65,90),range(95,95),range(97,122)])),{\not-follow(\char-class([range(45,45),range(48,57),range(65,90),range(95,95),range(97,122)]))})],{})}),
sort("FunctionDeclaration"): choice(sort("FunctionDeclaration"),{prod(label("expression",sort("FunctionDeclaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),label("signature",sort("Signature")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit(";")],{\tag("Foldable"()),\tag("breakable"("{expression}"))}),prod(label("abstract",sort("FunctionDeclaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),label("signature",sort("Signature")),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("default",sort("FunctionDeclaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),label("signature",sort("Signature")),layouts("LAYOUTLIST"),label("body",sort("FunctionBody"))],{\tag("Foldable"())}),prod(label("conditional",sort("FunctionDeclaration")),[label("tags",sort("Tags")),layouts("LAYOUTLIST"),label("visibility",sort("Visibility")),layouts("LAYOUTLIST"),label("signature",sort("Signature")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),lit("when"),layouts("LAYOUTLIST"),label("conditions",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(";")],{\tag("breakable"("{expression,conditions}")),\tag("Foldable"())})}),
sort("Start"): choice(sort("Start"),{prod(label("present",sort("Start")),[lit("start")],{}),prod(label("absent",sort("Start")),[],{})}),
lex("LAYOUT"): choice(lex("LAYOUT"),{prod(lex("LAYOUT"),[\char-class([range(9,13),range(32,32),range(133,133),range(160,160),range(5760,5760),range(6158,6158),range(8192,8202),range(8232,8233),range(8239,8239),range(8287,8287),range(12288,12288)])],{}),prod(lex("LAYOUT"),[lex("Comment")],{})}),
sort("Body"): choice(sort("Body"),{prod(label("toplevels",sort("Body")),[label("toplevels",\iter-star-seps(sort("Toplevel"),[layouts("LAYOUTLIST")]))],{})}),
sort("Import"): choice(sort("Import"),{prod(label("syntax",sort("Import")),[label("syntax",sort("SyntaxDefinition"))],{}),prod(label("default",sort("Import")),[lit("import"),layouts("LAYOUTLIST"),label("module",sort("ImportedModule")),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("extend",sort("Import")),[lit("extend"),layouts("LAYOUTLIST"),label("module",sort("ImportedModule")),layouts("LAYOUTLIST"),lit(";")],{}),prod(label("external",sort("Import")),[lit("import"),layouts("LAYOUTLIST"),label("name",sort("QualifiedName")),layouts("LAYOUTLIST"),lit("="),layouts("LAYOUTLIST"),label("at",sort("LocationLiteral")),layouts("LAYOUTLIST"),lit(";")],{})}),
sort("ConcreteHole"): choice(sort("ConcreteHole"),{prod(label("one",sort("ConcreteHole")),[lit("\<"),layouts("LAYOUTLIST"),label("symbol",sort("Sym")),layouts("LAYOUTLIST"),label("name",lex("Name")),layouts("LAYOUTLIST"),lit("\>")],{})}),
sort("UserType"): choice(sort("UserType"),{prod(label("parametric",sort("UserType")),[conditional(label("name",sort("QualifiedName")),{follow(lit("["))}),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("parameters",\iter-seps(sort("Type"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("name",sort("UserType")),[label("name",sort("QualifiedName"))],{})}),
sort("Variant"): choice(sort("Variant"),{prod(label("nAryConstructor",sort("Variant")),[label("name",lex("Name")),layouts("LAYOUTLIST"),lit("("),layouts("LAYOUTLIST"),label("arguments",\iter-star-seps(sort("TypeArg"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),label("keywordArguments",sort("KeywordFormals")),layouts("LAYOUTLIST"),lit(")")],{})}),
sort("FunctionModifiers"): choice(sort("FunctionModifiers"),{prod(label("modifierlist",sort("FunctionModifiers")),[label("modifiers",\iter-star-seps(sort("FunctionModifier"),[layouts("LAYOUTLIST")]))],{})}),
sort("Formals"): choice(sort("Formals"),{prod(label("default",sort("Formals")),[label("formals",\iter-star-seps(sort("Pattern"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")]))],{})}),
sort("Comprehension"): choice(sort("Comprehension"),{prod(label("set",sort("Comprehension")),[lit("{"),layouts("LAYOUTLIST"),label("results",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("}")],{\tag("breakable"("{results,generators}"))}),prod(label("list",sort("Comprehension")),[lit("["),layouts("LAYOUTLIST"),label("results",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{\tag("breakable"("{results,generators}"))}),prod(label("map",sort("Comprehension")),[lit("("),layouts("LAYOUTLIST"),label("from",sort("Expression")),layouts("LAYOUTLIST"),lit(":"),layouts("LAYOUTLIST"),label("to",sort("Expression")),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("generators",\iter-seps(sort("Expression"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{\tag("breakable"("{from,to,generators}"))})}),
lex("TimeZonePart"): choice(lex("TimeZonePart"),{prod(lex("TimeZonePart"),[\char-class([range(43,43),range(45,45)]),\char-class([range(48,49)]),\char-class([range(48,57)])],{}),prod(lex("TimeZonePart"),[lit("Z")],{}),prod(lex("TimeZonePart"),[\char-class([range(43,43),range(45,45)]),\char-class([range(48,49)]),\char-class([range(48,57)]),\char-class([range(48,53)]),\char-class([range(48,57)])],{}),prod(lex("TimeZonePart"),[\char-class([range(43,43),range(45,45)]),\char-class([range(48,49)]),\char-class([range(48,57)]),lit(":"),\char-class([range(48,53)]),\char-class([range(48,57)])],{})}),
lex("PostStringChars"): choice(lex("PostStringChars"),{prod(lex("PostStringChars"),[\char-class([range(62,62)]),\iter-star(lex("StringCharacter")),\char-class([range(34,34)])],{\tag("category"("Constant"))})}),
lex("HexIntegerLiteral"): choice(lex("HexIntegerLiteral"),{prod(lex("HexIntegerLiteral"),[\char-class([range(48,48)]),\char-class([range(88,88),range(120,120)]),conditional(iter(\char-class([range(48,57),range(65,70),range(97,102)])),{\not-follow(\char-class([range(48,57),range(65,90),range(95,95),range(97,122)]))})],{})}),
sort("Sym"): choice(sort("Sym"),{priority(sort("Sym"),[choice(sort("Sym"),{prod(label("except",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("!"),layouts("LAYOUTLIST"),label("label",lex("NonterminalLabel"))],{}),prod(label("iter",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("+")],{}),prod(label("startOfLine",sort("Sym")),[lit("^"),layouts("LAYOUTLIST"),label("symbol",sort("Sym"))],{}),prod(label("iterSep",sort("Sym")),[lit("{"),layouts("LAYOUTLIST"),label("symbol",sort("Sym")),layouts("LAYOUTLIST"),label("sep",sort("Sym")),layouts("LAYOUTLIST"),lit("}"),layouts("LAYOUTLIST"),lit("+")],{}),prod(label("parametrized",sort("Sym")),[conditional(label("nonterminal",lex("Nonterminal")),{follow(lit("["))}),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("parameters",\iter-seps(sort("Sym"),[layouts("LAYOUTLIST"),lit(","),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("literal",sort("Sym")),[label("string",lex("StringConstant"))],{}),prod(label("optional",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("?")],{}),prod(label("nonterminal",sort("Sym")),[conditional(label("nonterminal",lex("Nonterminal")),{\not-follow(lit("["))})],{}),prod(label("column",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("@"),layouts("LAYOUTLIST"),label("column",sort("IntegerLiteral"))],{}),prod(label("endOfLine",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("$")],{}),prod(label("alternative",sort("Sym")),[lit("("),layouts("LAYOUTLIST"),label("first",sort("Sym")),layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST"),label("alternatives",\iter-seps(sort("Sym"),[layouts("LAYOUTLIST"),lit("|"),layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("iterStarSep",sort("Sym")),[lit("{"),layouts("LAYOUTLIST"),label("symbol",sort("Sym")),layouts("LAYOUTLIST"),label("sep",sort("Sym")),layouts("LAYOUTLIST"),lit("}"),layouts("LAYOUTLIST"),lit("*")],{}),prod(label("iterStar",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("*")],{}),prod(label("sequence",sort("Sym")),[lit("("),layouts("LAYOUTLIST"),label("first",sort("Sym")),layouts("LAYOUTLIST"),label("sequence",\iter-seps(sort("Sym"),[layouts("LAYOUTLIST")])),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("characterClass",sort("Sym")),[label("charClass",sort("Class"))],{}),prod(label("empty",sort("Sym")),[lit("("),layouts("LAYOUTLIST"),lit(")")],{}),prod(label("caseInsensitiveLiteral",sort("Sym")),[label("cistring",lex("CaseInsensitiveStringConstant"))],{}),prod(label("start",sort("Sym")),[lit("start"),layouts("LAYOUTLIST"),lit("["),layouts("LAYOUTLIST"),label("nonterminal",lex("Nonterminal")),layouts("LAYOUTLIST"),lit("]")],{}),prod(label("parameter",sort("Sym")),[lit("&"),layouts("LAYOUTLIST"),label("nonterminal",lex("Nonterminal"))],{}),prod(label("labeled",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),label("label",lex("NonterminalLabel"))],{})}),associativity(sort("Sym"),\left(),{prod(label("notFollow",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("!\>\>"),layouts("LAYOUTLIST"),label("match",sort("Sym"))],{}),prod(label("precede",sort("Sym")),[label("match",sort("Sym")),layouts("LAYOUTLIST"),lit("\<\<"),layouts("LAYOUTLIST"),label("symbol",sort("Sym"))],{}),prod(label("follow",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("\>\>"),layouts("LAYOUTLIST"),label("match",sort("Sym"))],{}),prod(label("notPrecede",sort("Sym")),[label("match",sort("Sym")),layouts("LAYOUTLIST"),lit("!\<\<"),layouts("LAYOUTLIST"),label("symbol",sort("Sym"))],{})}),prod(label("unequal",sort("Sym")),[label("symbol",sort("Sym")),layouts("LAYOUTLIST"),lit("\\"),layouts("LAYOUTLIST"),label("match",sort("Sym"))],{})])}),
sort("QualifiedName"): choice(sort("QualifiedName"),{prod(label("default",sort("QualifiedName")),[conditional(label("names",\iter-seps(lex("Name"),[layouts("LAYOUTLIST"),lit("::"),layouts("LAYOUTLIST")])),{\not-follow(lit("::"))})],{})}),
sort("StringMiddle"): choice(sort("StringMiddle"),{prod(label("template",sort("StringMiddle")),[label("mid",lex("MidStringChars")),layouts("LAYOUTLIST"),label("template",sort("StringTemplate")),layouts("LAYOUTLIST"),label("tail",sort("StringMiddle"))],{}),prod(label("mid",sort("StringMiddle")),[label("mid",lex("MidStringChars"))],{}),prod(label("interpolated",sort("StringMiddle")),[label("mid",lex("MidStringChars")),layouts("LAYOUTLIST"),label("expression",sort("Expression")),layouts("LAYOUTLIST"),label("tail",sort("StringMiddle"))],{})}),
lex("URLChars"): choice(lex("URLChars"),{prod(lex("URLChars"),[\iter-star(\char-class([range(1,8),range(11,12),range(14,31),range(33,59),range(61,123),range(125,16777215)]))],{})}))
);

str generateRascalParser() = newGenerate("org.rascalmpl.library.lang.rascal.grammar.tests.generated_parsers", "RascalParser", Rascal);

loc RascalParserLoc = getModuleLocation("lang::rascal::grammar::tests::PicoGrammar").parent + "generated_parsers/RascalParser.java.gz";

void generateAndWriteRascalParser(){
	writeFile(RascalParserLoc, generateRascalParser());
}

int generateAndTimeRascalParser() { 
    println("GenerateAndTimeRascalParser");
	t = cpuTime();
	generateRascalParser();
	return (cpuTime() - t)/1000000;
}	

value main() = generateAndTimeRascalParser();

test bool tstgenerateRascalParser() = sameLines(generateRascalParser(), readFile(RascalParserLoc));

test bool cntChoice1()      {cnt = 0; visit(Rascal){ case choice(_,_): cnt += 1; }; return cnt == 144; }
test bool cntChoice2()      = size([x | /x:choice(_,_) := Rascal]) == 144;

test bool cntLex1()         {cnt = 0; visit(Rascal){ case lex(_): cnt += 1; }; return cnt == 287; }
test bool cntLex2()         = size([x | /x:lex(_) := Rascal]) == 287;

test bool cntEmpty1()       {cnt = 0; visit(Rascal){ case empty(): cnt += 1; }; return cnt == 5; }
test bool cntEmpty2()       = size([x | /x:empty() := Rascal]) == 5;

test bool cntSort1()        {cnt = 0; visit(Rascal){ case sort(_): cnt += 1; }; return cnt == 1051; }
test bool cntSort2()        = size([x | /x:sort(_) := Rascal]) == 1051;

test bool cntLit1()         {cnt = 0; visit(Rascal){ case lit(_): cnt += 1; }; return cnt == 667; }
test bool cntLit2()         = size([x | /x:lit(_) := Rascal]) == 667;

test bool cntLabel1()       {cnt = 0; visit(Rascal){ case label(_,_): cnt += 1; }; return cnt == 961; }
test bool cntLabel2()       = size([x | /x:label(_,_) := Rascal]) == 961;

test bool cntCharClass1()   {cnt = 0; visit(Rascal){ case \char-class(_): cnt += 1; }; return cnt == 169; }
test bool cntCharClass2()   = size([x | /x:\char-class(_) := Rascal]) == 169;
                        
test bool cntProd1()        {cnt = 0; visit(Rascal){ case \prod(_,_,_): cnt += 1; }; return cnt == 540; }
test bool cntProd2()        = size([x | /x:\prod(_,_,_) := Rascal]) == 540;

test bool cntEmptyList1()   {cnt = 0; visit(Rascal){ case []: cnt += 1; }; return cnt == 26; }
test bool cntEmptyList2()   = size([x | /x:[] := Rascal]) == 26;
                         
test bool cntList1()        {cnt = 0; visit(Rascal){ case [*value s]: cnt += 1; }; return cnt == 837; }
test bool cntList2()        = size([x | /x:[*value s] := Rascal]) == 837;

test bool cntEmptySet1()    {cnt = 0; visit(Rascal){ case {}: cnt += 1; }; return cnt == 451; }
test bool cntEmptySet2()    = size([x | /x:{} := Rascal]) == 451;

test bool cntSet1()         {cnt = 0; visit(Rascal){ case {*value s}: cnt += 1; }; return cnt == 766; }
test bool cntSet2()         = size([x | /x:{*value s} := Rascal]) == 766;
@ignoreInterpreter{gives wrong answer 1186}
test bool cntStr1()         {cnt = 0; visit(Rascal){ case str s: cnt += 1; }; return cnt == 3967; }
test bool cntStr2()         = size([x | /x:str s := Rascal]) == 3967;

test bool cntInt1()         {cnt = 0; visit(Rascal){ case int n: cnt += 1; }; return cnt == 808; }
test bool cntInt2()         = size([x | /x:int n := Rascal]) == 808;

test bool cntIter1()        {cnt = 0; visit(Rascal){ case \iter(_): cnt += 1; }; return cnt == 12; }
test bool cntIter2()        = size([x | /x:\iter(_) := Rascal]) == 12;

test bool cntIterStar1()    {cnt = 0; visit(Rascal){ case \iter-star(_): cnt += 1; }; return cnt == 26; }
test bool cntIterStar2()    = size([x | /x:\iter-star(_) := Rascal]) == 26;

test bool cntIterSeps1()    {cnt = 0; visit(Rascal){ case \iter-seps(_,_): cnt += 1; }; return cnt == 51; }
test bool cntIterSeps2()    = size([x | /x:\iter-seps(_,_) := Rascal]) == 51;

test bool cntIterStarSeps1(){cnt = 0; visit(Rascal){ case \iter-star-seps(_,_): cnt += 1; }; return cnt == 35; }
test bool cntIterStarSeps2()= size([x | /x: \iter-star-seps(_,_) := Rascal]) == 35;

test bool cntConditional1() {cnt = 0; visit(Rascal){ case \conditional(_,_): cnt += 1; }; return cnt == 69; }
test bool cntConditional2() = size([x | /x:\conditional(_,_) := Rascal]) == 69;

test bool cntRange1()       {cnt = 0; visit(Rascal){ case \range(_,_): cnt += 1; }; return cnt == 404; }
test bool cntRange2()       = size([x | /x:\range(_,_) := Rascal]) == 404;

test bool cntPriority1()    {cnt = 0; visit(Rascal){ case \priority(_,_): cnt += 1; }; return cnt == 5; }
test bool cntPriority1()    = size([x | /x: \priority(_,_) := Rascal]) == 5;